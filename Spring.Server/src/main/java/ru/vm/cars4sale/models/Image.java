package ru.vm.cars4sale.models;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;

import javax.persistence.Lob;

/**
 * Image generated by hbm2java
 */
@Entity
@Table(name = "image", catalog = "UNO")
public class Image implements java.io.Serializable {

	private Integer id;
	private Car car;
	private String filename;
	private byte[] data;

	public Image() {
	}

	public Image(Car car, String filename, byte[] data) {
		this.car = car;
		this.filename = filename;
		this.data = data;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.TABLE)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/*
	 * Many images can be linked with one car
	 * link table = CAR_IMAGE
	 * image.id references car_image.image_id
	 * car_image.car_id references a linked car
	 */
	@ManyToOne(cascade=CascadeType.ALL)
	@JoinTable(
            name="CAR_IMAGE",
            joinColumns={@JoinColumn(name ="image_id", referencedColumnName ="id")},
            inverseJoinColumns = @JoinColumn( name="car_id")
    )
	@JsonBackReference
	public Car getCar() {
		return this.car;
	}

	public void setCar(Car car) {
		this.car = car;
	}

	@Column(name = "filename", nullable = false)
	public String getFilename() {
		return this.filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	@Lob
	@Column(name = "data", nullable = false)
	public byte[] getData() {
		return this.data;
	}

	public void setData(byte[] data) {
		this.data = data;
	}

}
